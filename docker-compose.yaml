version: "3"
services:
  app:
    container_name: app #define the name of the container
    hostname: cmpt370-app
    build: ./app #build the image from the dockerfile in the specified location
    ports:
    - "8080:8080" # Forward the exposed port 8080 on the container to port 80 on the host machine
    volumes:
        - ./app/:/app/
        - /app/node_modules
        - ./app/src:/app/src
    restart: "unless-stopped"
    depends_on:
    - backend #app depends on the backend container so start that first
    networks:
    - cmpt370 #define the docker network that the container is on so all containers can communicate
  backend:
    container_name: backend
    hostname: cmpt370-api
    build: ./backend
    ports:
    - "5000:5000"
    volumes:
    - ./backend:/app
    restart: "unless-stopped"
    depends_on:
    - neo4j
    networks:
      - cmpt370
  neo4j:
    container_name: neo4j
    hostname: cmpt370-db
    image: neo4j:4.4
    ports: 
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/plugins:/plugins
      - ./neo4j/imports:/imports
    restart: "unless-stopped"
    environment:
      - NEO4J_AUTH=none
      - NEO4JLABS_PLUGINS='["graph-data-science"]'
    networks:
      - cmpt370

networks:
  cmpt370:
volumes:
  Neo4j:
